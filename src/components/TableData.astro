---
interface Props {
    head: Array<string>;
    body: Array<Array<string>>;
}

const { head, body } = Astro.props;

function validURL(str: string) {
    var pattern = new RegExp(
        "^(https?:\\/\\/)?" + // protocol
            "((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|" + // domain name
            "((\\d{1,3}\\.){3}\\d{1,3}))" + // OR ip (v4) address
            "(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*" + // port and path
            "(\\?[;&a-z\\d%_.~+=-]*)?" + // query string
            "(\\#[-a-z\\d_]*)?$",
        "i",
    ); // fragment locator
    return !!pattern.test(str);
}
---

<div class="overflow-x-auto rounded-lg border border-gray-200">
    <table class="min-w-full divide-y-2 divide-gray-200 bg-white text-sm">
        <thead>
            <tr>
                {
                    head.map((item: string) => (
                        <th class="text-gray-900 py-2 text-left px-4">
                            {item}
                        </th>
                    ))
                }
            </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
            {
                body.map((row) => (
                    <tr>
                        {row.map((item) => (
                            <td class="whitespace-nowrap px-4 py-2 font-medium text-gray-900">
                                {validURL(item) ? (
                                    <a href={item} target="_blank">
                                        {item}
                                    </a>
                                ) : (
                                    <span>{item}</span>
                                )}
                            </td>
                        ))}
                    </tr>
                ))
            }
        </tbody>
    </table>
</div>
